% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/uniform.R
\name{uniform.discrete}
\alias{uniform.discrete}
\title{Generate a uniform design for discrete factors with different number of levels}
\usage{
uniform.discrete(
  t,
  p,
  levels,
  design = NULL,
  max.sa.iter = 1e+06,
  temp = 0,
  decay = 0.95,
  no.update.iter.max = 400,
  num.passes = 10,
  max.det.iter = 1e+06,
  method = "full",
  scaled = TRUE
)
}
\arguments{
\item{t}{multiple of the least common multiple of the levels.}

\item{p}{design dimension.}

\item{levels}{a vector of the number of levels for each dimension.}

\item{design}{an initial design. If design=NULL, a random design is generated.}

\item{max.sa.iter}{maximum number of swapping involved in the simulated annealing (SA) algorithm.}

\item{temp}{initial temperature of the simulated annealing algorithm. If temp=0, it will be automatically determined.}

\item{decay}{the temperature decay rate of simulated annealing.}

\item{no.update.iter.max}{the maximum number of iterations where there is no update to the global optimum before SA stops.}

\item{num.passes}{the maximum number of passes of the whole design matrix if deterministic swapping is used.}

\item{max.det.iter}{maximum number of swapping involved in the deterministic swapping algorithm.}

\item{method}{choice of "deterministic", "sa", or "full". If the method="full", the design is first optimized by SA and then deterministic swapping.}

\item{scaled}{whether the design is scaled to unit hypercube. If scaled=FALSE, the design is represented by integer numbers from 1 to design size. Leave it as TRUE when no initial design is provided.}
}
\value{
\item{design}{final design points.}
\item{design.int}{design transformed to integer numbers for each dimenion}
\item{total.iter}{total number of swaps in the optimization.}
\item{criterion}{final optimized criterion.}
\item{crit.hist}{criterion history during the optimization process.}
}
\description{
This function generates a uniform design for discrete factors with different number of levels.
}
\details{
\code{uniform.discrete} generates a uniform design of discrete factors with different number of levels by minimizing the wrap-around discrepancy criterion (see \code{\link{uniform.crit}}).
}
\examples{
p = 5
levels = c(3, 4, 6, 2, 3)
t = 1
D = uniform.discrete(t, p, levels)
}
